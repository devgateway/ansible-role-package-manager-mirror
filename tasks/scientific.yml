---
- name: Load variables for Scientific {{ ansible_distribution_major_version }}
  include_vars:
    file: scientific{{ ansible_distribution_major_version }}.yml

# Regex explanation: find non-empty lines until EOL or comment (marked by "#" or ";") entirely
# consisting of characters other than "=" and "[". In other words, find non-empty, non-comment
# lines that are neither section names nor "option = value" pairs.
- name: Find repos not conforming to INI format
  command: >
    grep -l '^[^#=[]\+\($\|[#;]\)'
    {{ pkgmgr_repos | map(attribute = 'file') | map('quote') | join(' ') }}
  args:
    chdir: /etc/yum.repos.d
  register: grep_result
  changed_when: false
  failed_when: grep_result.rc > 2

# Script explanation
# FIRST LINE:
# - save to hold space
# - delete
# "CROOKED" LINES:
# - append pattern space to hold space
# - if last line:
#   - swap hold and pattern space
#   - unfold
#   else:
#   - delete
# "NORMAL" LINES:
# - swap hold and pattern space
# - unfold
# - if last line:
#   - append hold space to pattern space
- name: Unfold lines in repos
  command: >
    sed -i
    '1 { h; d; };
    /^[^#=[]\+\($\|[#;]\)/ {
    H;
    $ { x; s/[[:space:]]\+/ /g; };
    $! d;
    };
    /^[^#=[]\+\($\|[#;]\)/! {
    x;
    s/[[:space:]]\+/ /g;
    $ G;
    };'
    {{ grep_result.stdout_lines | map('quote') | join(' ') }}
  when: grep_result.rc == 0
  args:
    chdir: /etc/yum.repos.d
    warn: false

- name: Configure baseurl in repos
  ini_file:
    dest: /etc/yum.repos.d/{{ item[0].file }}
    section: "{{ item[1].name }}"
    option: baseurl
    value: "{{ pkgmgr_mirror[ansible_distribution]['v' + ansible_distribution_major_version] }}{{ item[1].uri }}"
  with_subelements:
    - "{{ pkgmgr_repos }}"
    - sections
